name: Deploy to Elastic Beanstalk

on:
  push:
    branches: "main"
    paths: [
      'deploy/aws_eb/*',
      'public/*',
      'server/*',
      'src/*',
      'nitro.config.ts',
      'package-lock.json',
      'package.json',
      'postcss.config.cjs',
      'tsconfig.json'
    ]

env:
  EB_APPLICATION_NAME: JSPSI
  EB_ENVIRONMENT_NAME: jspsi-env
  AWS_REGION_NAME: us-west-2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4
    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version-file: package.json
    - name: Build
      run: |
        npm ci
        npm run build
    - name: Package
      run: |
        cp -a deploy/aws_eb/. .output \
        && (cd .output && zip -r ../${{github.sha}}.zip .)
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: deploy-files
        path: ${{github.sha}}.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/download-artifact@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION_NAME }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Deploy
      run: |
        aws s3 cp \
          "deploy-files/${{github.sha}}.zip" \
          s3://elasticbeanstalk-${{ env.AWS_REGION_NAME }}-${{ secrets.AWS_ACCOUNT_ID }}/
        aws elasticbeanstalk create-application-version \
            --application-name $EB_APPLICATION_NAME \
            --version-label ${{github.sha}} \
            --description ${{github.sha}} \
            --source-bundle S3Bucket="elasticbeanstalk-${{ env.AWS_REGION_NAME }}-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="${{github.run_id}}.zip"
        aws elasticbeanstalk update-environment \
            --application-name $EB_APPLICATION_NAME
            --environment-name $EB_ENVIRONMENT_NAME
            --version-label ${{github.sha}}
        aws elasticbeanstalk wait environment-updated \
            --application-name $EB_APPLICATION_NAME \
            --environment-name $EB_ENVIRONMENT_NAME
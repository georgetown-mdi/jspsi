/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as PsiRouteImport } from './routes/psi'
import { Route as IndexRouteImport } from './routes/index'
import { ServerRoute as ApiPsiCreateServerRouteImport } from './routes/api/psi/create'
import { ServerRoute as ApiPsiIdIndexServerRouteImport } from './routes/api/psi/$id/index'
import { ServerRoute as ApiPsiIdWaitServerRouteImport } from './routes/api/psi/$id/wait'

const rootServerRouteImport = createServerRootRoute()

const PsiRoute = PsiRouteImport.update({
  id: '/psi',
  path: '/psi',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiPsiCreateServerRoute = ApiPsiCreateServerRouteImport.update({
  id: '/api/psi/create',
  path: '/api/psi/create',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiPsiIdIndexServerRoute = ApiPsiIdIndexServerRouteImport.update({
  id: '/api/psi/$id/',
  path: '/api/psi/$id/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiPsiIdWaitServerRoute = ApiPsiIdWaitServerRouteImport.update({
  id: '/api/psi/$id/wait',
  path: '/api/psi/$id/wait',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/psi': typeof PsiRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/psi': typeof PsiRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/psi': typeof PsiRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/psi'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/psi'
  id: '__root__' | '/' | '/psi'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PsiRoute: typeof PsiRoute
}
export interface FileServerRoutesByFullPath {
  '/api/psi/create': typeof ApiPsiCreateServerRoute
  '/api/psi/$id/wait': typeof ApiPsiIdWaitServerRoute
  '/api/psi/$id': typeof ApiPsiIdIndexServerRoute
}
export interface FileServerRoutesByTo {
  '/api/psi/create': typeof ApiPsiCreateServerRoute
  '/api/psi/$id/wait': typeof ApiPsiIdWaitServerRoute
  '/api/psi/$id': typeof ApiPsiIdIndexServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/psi/create': typeof ApiPsiCreateServerRoute
  '/api/psi/$id/wait': typeof ApiPsiIdWaitServerRoute
  '/api/psi/$id/': typeof ApiPsiIdIndexServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/psi/create' | '/api/psi/$id/wait' | '/api/psi/$id'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/psi/create' | '/api/psi/$id/wait' | '/api/psi/$id'
  id: '__root__' | '/api/psi/create' | '/api/psi/$id/wait' | '/api/psi/$id/'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiPsiCreateServerRoute: typeof ApiPsiCreateServerRoute
  ApiPsiIdWaitServerRoute: typeof ApiPsiIdWaitServerRoute
  ApiPsiIdIndexServerRoute: typeof ApiPsiIdIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/psi': {
      id: '/psi'
      path: '/psi'
      fullPath: '/psi'
      preLoaderRoute: typeof PsiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/psi/create': {
      id: '/api/psi/create'
      path: '/api/psi/create'
      fullPath: '/api/psi/create'
      preLoaderRoute: typeof ApiPsiCreateServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/psi/$id/': {
      id: '/api/psi/$id/'
      path: '/api/psi/$id'
      fullPath: '/api/psi/$id'
      preLoaderRoute: typeof ApiPsiIdIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/psi/$id/wait': {
      id: '/api/psi/$id/wait'
      path: '/api/psi/$id/wait'
      fullPath: '/api/psi/$id/wait'
      preLoaderRoute: typeof ApiPsiIdWaitServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PsiRoute: PsiRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiPsiCreateServerRoute: ApiPsiCreateServerRoute,
  ApiPsiIdWaitServerRoute: ApiPsiIdWaitServerRoute,
  ApiPsiIdIndexServerRoute: ApiPsiIdIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
